{"version":3,"sources":["logo.svg","component/menu/menu.js","views/index/first/val.js","views/index/first/index.js","views/index/middle/val.js","views/index/middle/index.js","views/index/index.js","views/react-router/index.js","views/react-router/val.js","views/Nopath/index.js","views/component/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","className","alt","src","logo","to","activeClassName","href","Firstindex","preview","height","toolbar","lineNum","value","val","onChange","handleChange","props","state","num","text","flag","onclick","setState","handleClick","e","preventDefault","handleClick2","style","width","type","onClick","this","Component","Index","component","path","Listen","from","Myrouter","Nopath","App","Components","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7f63bcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from '../../logo.svg';\nimport { NavLink as Link } from 'react-router-dom'\nimport './style.scss'\nexport default function Menu(){\n    return (\n    <div className=\"w-100 flex bg-myblack  ai-center\">\n        <img alt=\"\"  src={logo} className=\"logo ml-4\"></img>\n        <div className=\"color-myblue pr-5 size-4\"> React</div>\n        <ul className=\"menu li-none flex w-100  size-4 color-mywhite ai-center pr-2 weight-lighter\">\n            <li className=\"pr-5 weight-lighter menua\"><Link to=\"/index\" activeClassName=\"selected\">基本使用</Link></li>\n            <li className=\"pr-5 weight-lighter\"><Link to=\"/router\" activeClassName=\"selected\">路由</Link></li>\n            <li className=\"pr-5 weight-lighter\"><Link to=\"/components\" activeClassName=\"selected\">组件</Link></li>\n            <li className=\"pr-5 weight-lighter\"><Link to=\"/life\" activeClassName=\"selected\">生命周期</Link></li>\n        </ul>\n        <div className=\"color-mywhite pr-5\"><a href=\"https://github.com/Buzz888/buzz888.github.io\">Github</a></div>\n    </div>\n    )\n}","export default  `\n## React初始化\n###MVC框架\n>什么是MVC框架？\n>>view 视图 model 数据 controll 控制层\n\nReact完成监听数据的更新,数据更新帮助我们去渲染视图,将虚拟dom渲染为真实dom\n### 与vue相比区别\n视图更新并不会改变数据mvc是单向  \n需要更新数据需要在controll单独处理\n### React基本使用\n>ReactDOM.render( [ jsx ] , [ container ] , callback )=>jsx:语法 container:节点 \n\n使用要点:   \n1.  JSX语法基于{}绑定动态数据 Null underfined 为空 不渲染  \n2.  在括号不能使用引用类型值除了数组 即对象/函数/newDate/正则等  \n3. className = class style={{color:'blue'}}  \n4. 三元运算符的使用  \n\\`\\`\\`<h1>{sex===0?'男':'女'}</h1>{sex===0?<p>hello</p>:null}\\`\\`\\`\n5. 渲染多列表 遍历数组或者对象\n必须要有返回值的方法才可以使用如map filter,foreach for不可使用\n\\`\\`\\`\n{data.map(i=>\n<li key={i.id}>\n        <span>{i.id}:</span>\n        <span>{i.name}</span>\n</li>)}\n\\`\\`\\`\n>必须要有key因为虚拟dom会就地复用从而提高dom渲染速度\n\n6.JSX本质上就是转换为React.createElement在React内部构建虚拟Dom，最终渲染出页面\n7.虚拟dom转换格式\n>React.createElement(\"div\", null, \"hello\", React.createElement(\"div\", null, React.createElement(\"h1\", null)));\n\n转换为:\n>>{\n  $$typeof:Symbol(react.element),\n  key:null,\n  ref:null,\n  type:标签名/组件,\n  props:{\n    xxx:xxx //=>给元素标签设置属性(REF/KEY除外)\n    //=>没有子节点则没有children有子节点才有children\n}}\n`\n","import React from 'react';\nimport Editor from 'for-editor';\nimport val from './val.js';\nexport default function Firstindex(){\n    return (\n        <div><Editor preview=\"true\" height=\"75vh\" toolbar=\"\" lineNum=\"false\" value={val} onChange={() => this.handleChange()} /></div>\n        \n    )\n}","export default `\n## React事件绑定\n1. React 事件的命名采用小驼峰式（camelCase），而不是纯小写。\n2. 使用 JSX 语法时你需要传入一个函数作为事件处理函数，而不是一个字符串。  \n\n### React \n\\`\\`\\`\n<button onClick={activateLasers}>\n  Activate Lasers\n</button>\n\\`\\`\\`\n>React内部是通过this.state变量来维护内部状态，并通过this.stateState来修改状态\n\n\\`\\`\\`\n定义变量:\nthis.state = {num:1}\n修改变量状态:\nthis.setState({\nnum:this.state.num+1\n})\n\\`\\`\\`\n>其他变量不写则不会改变局部修改 👉点击\nReact阻止默认行为是通过preventDefault\n\n 在事件添加e.preventDefault();\n \n###React三元表达式和布尔值的使用\n\\`\\`\\`\nclassName={this.state.flag ? 'open btn' : 'close btn'}\nflag:!this.state.flag\n\\`\\`\\`\n###向事件处理程序传递参数\n\\`\\`\\`\n<button onClick={(e) => this.deleteRow(id, e)}>Delete Row</button>\n\\`\\`\\`\n`","import React, { Component } from 'react';\nimport Editor from 'for-editor';\nimport val from './val.js';\nimport './style.scss'\nexport default class Firstindex extends Component{\n    constructor(props){\n        super(props)\n        this.props = props\n        this.state = {\n            num:1,\n            text:null,\n            flag:true\n          }\n        this.onclick =()=>{this.setState({num:this.state.num+1})}\n        this.handleClick=(e)=>{e.preventDefault();this.setState({text:'<a>无跳转'})}\n        this.handleClick2=()=>{this.setState({flag:!this.state.flag});}\n    }\n    render() {return(\n        <div className=\"listen\">\n        <Editor style={{width:'90%'}} className=\"listenmd\" preview=\"true\" height=\"75vh\" toolbar=\"\" lineNum=\"false\" value={val} onChange={() => this.handleChange()} />\n        <div className=\"addlisten\">\n         <button type=\"button\" className=\"listenclick\" onClick={this.onclick}>ClickChange</button>\n        <div className=\"size-5\">{this.state.num}</div>\n        <div className=\"guodu\"></div>   \n        <a href=\"https://github.com/Buzz888/buzz888.github.io\" className=\"color-myblack\" onClick={this.handleClick}>\n        Click me\n        </a>\n        <div className=\"weight-bolder\">{this.state.text}</div>\n        <div className=\"guodu\"></div>   \n        <div>\n           <div onClick={this.handleClick2} className={this.state.flag ? 'open btn' : 'close btn'}></div>\n\n        </div>\n        </div>\n        </div>\n        \n    )}\n}","import React,{Component} from 'react';\nimport Firstindex from './first/index'\nimport Listen from './middle/index'\nimport { NavLink as Link,Route,Switch,Redirect} from 'react-router-dom'\nexport default class Index extends Component{\n      render() {\n        return <div className=\"item-md \">\n            <div className=\"tab-title bg-myblack py-3 flex jc-sa\">\n                <Link to=\"/index/first\" activeClassName=\"titleselected\">[React原理]</Link>\n                <Link to=\"/index/listen\" activeClassName=\"titleselected\">[React事件]</Link>\n            </div>\n            <Switch>\n            <Route component={Firstindex} path=\"/index/first\"></Route>\n            <Route component={Listen} path=\"/index/listen\"></Route>\n            <Redirect to=\"/index/first\" from=\"/\"/>\n            </Switch>\n            </div>\n      }\n    }","import React,{Component} from 'react';\nimport Editor from 'for-editor';\nimport val from './val'\nexport default class Myrouter extends Component{\n    render(){\n        return (<div className=\"item-md\"><Editor preview=\"true\" height=\"85vh\" toolbar=\"\" lineNum=\"false\" value={val} onChange={() => this.handleChange()} /></div>)\n    }\n\n} ","export default `\n##React Router\nweb:  \nnpm install react-router-dom 安装路由模块  \n1.路由的挂载  \n\n\\`\\`\\`\nindex.js:引入路由模块选择路由模式\nBrowserRouter as Router&HashRouter as Router\n一个带#号一个不带 后者兼容性更好\nimport {HashRouter as Router ,Route} from 'react-router-dom'\nrender函数添加路由匹配\n<Router>\n<Route component={App}></Route>\n</Router>\n\n\\`\\`\\`\n2.开始使用路由\n\n\\`\\`\\`\nimport {Router,Route,Link} from 'react-router-dom'\nLink/NavLink用于路由跳转\n<Link to=\"./index\"></Link>\n<NavLink>可用为link添加样式如activeClassName=\"selected\"\nactiveStyle={{\n    fontWeight: \"bold\",\n    color: \"red\"\n  }}\n  \\`\\`\\`\n3.路由的渲染\n>exact 用于不完全匹配适用于页面动态路由渲染使用\n\n\\`\\`\\`\ncomponent/render渲染路由组件 render可以传值\n<Route render={(routerprops)=>{return <Index {...routerprops} x={1}></Index>}}></Route>\n\n<Router> \n<Route component={Index} path=\"/index/\"></Route>\n<Route render={()=><div></div>}></Route>\n</Router>\n动态传值:\nthis.props.match.params.id\n\\`\\`\\`\n>路由重定向\n>> \\`\\`\\`\n>>  <Switch><Redirect to=\"/index\" from=\"/\"/><Switch>\n>> 404\n>> <Switch>\n>> <Redirect to=\"/404\"/>\n>> <Redirect to=\"/index\" from=\"/\" exact/>\n>> <Switch>\n>> \\`\\`\\`\n\n#### 路由传值的三种方式  \n1. :id =>this.props.match.params.id  \n2. ?from=artical  \n3. {{pathname:'/index',state:{id:1}}}\n   \n#### 路由跳转的方式\nthis.props.history.push('/home') 支持上面路由传值\n\n>没有用router渲染的组件需要通过withRouter()包起来调用props的方法\n`","import React,{Component} from 'react'\nimport logo from '../../logo.svg';\nimport './style.scss'\nexport default class Nopath extends Component{\n    render(){\n        return(\n    <div className=\"w-100 h-100 titlepath bg-myblack flex jc-center pb-5\">\n        <img src={logo} className=\" App-logo \" alt=\"logo\" />\n        <h1 className=\"Nopath\">Is Nopath 404</h1>\n    </div>\n    \n        )\n    }\n}","import React,{Component} from 'react';\nimport { NavLink as Link,Route,Switch,Redirect} from 'react-router-dom'\nexport default class Index extends Component{\n      render() {\n        return <div className=\"item-md \">\n            <div className=\"tab-title bg-myblack py-3 flex jc-sa\">\n                <Link to=\"/index/first\" activeClassName=\"titleselected\">[函数组件]</Link>\n                <Link to=\"/index/listen\" activeClassName=\"titleselected\">[Class组件]</Link>\n                <Link to=\"/index/listen\" activeClassName=\"titleselected\">[Hook组件]</Link>\n            </div>\n            </div>\n      }\n    }","import React,{Component} from 'react';\nimport Menu from './component/menu/menu' //菜单组件\n// import Lefttab from './component/left-tab/index'\n// import render from 'react-dom';\nimport {HashRouter as Router ,Route,Switch,Redirect} from 'react-router-dom'\nimport {Index,Myrouter,Nopath,Components} from './views/index'\nexport default class App extends Component{\n    render(){\n        return(\n            <div>\n            <Menu></Menu>\n            <div>\n                \n                <Router>\n                <Switch>\n                <Route component={Index} path=\"/index/\"></Route>\n                <Route component={Myrouter} path=\"/router\"></Route>\n                <Route component={Components} path=\"/components\"></Route>\n                <Route component={Nopath} path=\"/404\"></Route>\n                <Redirect to=\"/index\" from=\"/\" exact/>\n                <Redirect to=\"/404\" />\n                </Switch>\n                \n                </Router>\n            </div>\n            </div>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './index.scss'\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter as Router ,Route} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router>\n                       <Route component={App}></Route>\n               </Router>, \ndocument.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}