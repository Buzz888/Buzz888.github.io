{"version":3,"sources":["logo.svg","component/menu/menu.js","views/index/first/val.js","views/index/first/index.js","views/index/middle/val.js","views/index/middle/index.js","views/index/index.js","views/react-router/index.js","views/react-router/val.js","views/Nopath/index.js","views/component/fnc-com/val.js","views/component/fnc-com/index.js","views/component/class-com/val.js","views/component/class-com/index.js","views/component/hook-com/val.js","views/component/hook-com/index.js","views/component/index.js","views/life/index.js","views/life/val.js","views/elem/list.js","views/elem/num.js","views/elem/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","state","flag","change","setState","className","onClick","this","alt","src","logo","to","activeClassName","href","Component","Firstindex","preview","height","toolbar","lineNum","value","val","onChange","handleChange","props","num","text","onclick","handleClick","e","preventDefault","handleClick2","style","width","type","Index","component","path","Listen","from","Myrouter","Nopath","Classcom","Hookcom","useState","count","setCount","ary","counts","setCounts","useEffect","document","title","Fnccom","Classccom","exact","List","setVal","inp","target","x","val1","map","i","index","splice","console","log","key","createContext","Provider","CounterConsumer","Consumer","ConuterProvider","incrementCount","decrementCount","onincrementCount","ondecrementCount","children","Counter","arg","CountBtn","handler","Myredux","id","Num","App","marginTop","Components","Life","Elem","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9837cf1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react';\nimport logo from '../../logo.svg';\nimport { NavLink as Link } from 'react-router-dom'\nimport './style.scss'\nexport default class Menu extends Component{\n    constructor(){\n        super()\n        this.state = {flag:false};\n        this.change = ()=>{\n            this.setState ({\n                flag :!this.state.flag\n            })\n        }\n    }\n    render(){\n    return (\n    <div className=\"w-100 flex bg-myblack  ai-center mymenu\" >\n        <span onClick={this.change} className=\"pl-3 iconfont icon-oacute iconmenu\"></span>\n        <img alt=\"\"  src={logo} className=\"logo ml-4\"></img>\n        <div className=\"color-myblue pr-5 size-4\"> React</div>\n        <ul className=\"menu li-none flex w-100  size-4 color-mywhite ai-center pr-2 weight-lighter\">\n            <li className=\"pr-5 weight-lighter menua\"><Link to=\"/index\" activeClassName=\"selected\">基本使用</Link></li>\n            <li className=\"pr-5 weight-lighter\"><Link to=\"/router\" activeClassName=\"selected\">路由</Link></li>\n            <li className=\"pr-5 weight-lighter\"><Link to=\"/components\" activeClassName=\"selected\">组件</Link></li>\n            <li className=\"pr-5 weight-lighter\"><Link to=\"/life\" activeClassName=\"selected\">生命周期</Link></li>\n        </ul>\n        <div className=\"color-mywhite pr-5\"><a href=\"https://github.com/Buzz888/buzz888.github.io\">Github</a></div>\n        <div className={this.state.flag?'modle-menu bg-myblack':null}>\n            {\n              this.state.flag? <ul className=\"li-none w-100  size-4 flex column color-mywhite ai-center pr-2 weight-lighter\">\n            <li className=\"py-4 weight-lighter\"><Link to=\"/index\" activeClassName=\"selected\">基本使用</Link></li>\n            <li className=\"pb-4 weight-lighter\"><Link to=\"/router\" activeClassName=\"selected\">路由</Link></li>\n            <li className=\"pb-4 weight-lighter\"><Link to=\"/components\" activeClassName=\"selected\">组件</Link></li>\n            <li className=\"pb-4 weight-lighter\"><Link to=\"/life\" activeClassName=\"selected\">生命周期</Link></li>\n            <li className=\"pb-4 weight-lighter\"><Link to=\"/elem\" activeClassName=\"selected\">案例</Link></li>\n        </ul>:null \n            }\n        \n        </div>\n    </div>\n    )\n}\n}","export default  `\n## React初始化\n###MVC框架\n>什么是MVC框架？\n>>view 视图 model 数据 controll 控制层\n\nReact完成监听数据的更新,数据更新帮助我们去渲染视图,将虚拟dom渲染为真实dom\n### 与vue相比区别\n视图更新并不会改变数据mvc是单向  \n需要更新数据需要在controll单独处理\n### React基本使用\n>ReactDOM.render( [ jsx ] , [ container ] , callback )=>jsx:语法 container:节点 \n\n使用要点:   \n1.  JSX语法基于{}绑定动态数据 Null underfined 为空 不渲染  \n2.  在括号不能使用引用类型值除了数组 即对象/函数/newDate/正则等  \n3. className = class style={{color:'blue'}}  \n4. 三元运算符的使用  \n\\`\\`\\`<h1>{sex===0?'男':'女'}</h1>{sex===0?<p>hello</p>:null}\\`\\`\\`\n5. 渲染多列表 遍历数组或者对象\n必须要有返回值的方法才可以使用如map filter,foreach for不可使用\n\\`\\`\\`\n{data.map(i=>\n<li key={i.id}>\n        <span>{i.id}:</span>\n        <span>{i.name}</span>\n</li>)}\n\\`\\`\\`\n>必须要有key因为虚拟dom会就地复用从而提高dom渲染速度\n\n6.JSX本质上就是转换为React.createElement在React内部构建虚拟Dom，最终渲染出页面\n7.虚拟dom转换格式\n>React.createElement(\"div\", null, \"hello\", React.createElement(\"div\", null, React.createElement(\"h1\", null)));\n\n转换为:\n>>{\n  $$typeof:Symbol(react.element),\n  key:null,\n  ref:null,\n  type:标签名/组件,\n  props:{\n    xxx:xxx //=>给元素标签设置属性(REF/KEY除外)\n    //=>没有子节点则没有children有子节点才有children\n}}\n`\n","import React from 'react';\nimport Editor from 'for-editor';\nimport val from './val.js';\nexport default function Firstindex(){\n    return (\n        <div><Editor preview=\"true\" height=\"75vh\" toolbar=\"\" lineNum=\"false\" value={val} onChange={() => this.handleChange()} /></div>\n        \n    )\n}","export default `\n## React事件绑定\n1. React 事件的命名采用小驼峰式（camelCase），而不是纯小写。\n2. 使用 JSX 语法时你需要传入一个函数作为事件处理函数，而不是一个字符串。  \n\n### React \n\\`\\`\\`\n<button onClick={activateLasers}>\n  Activate Lasers\n</button>\n\\`\\`\\`\n>React内部是通过this.state变量来维护内部状态，并通过this.stateState来修改状态\n\n\\`\\`\\`\n定义变量:\nthis.state = {num:1}\n修改变量状态:\nthis.setState({\nnum:this.state.num+1\n})\n\\`\\`\\`\n>其他变量不写则不会改变局部修改 👉点击\nReact阻止默认行为是通过preventDefault\n\n 在事件添加e.preventDefault();\n \n###React三元表达式和布尔值的使用\n\\`\\`\\`\nclassName={this.state.flag ? 'open btn' : 'close btn'}\nflag:!this.state.flag\n\\`\\`\\`\n###向事件处理程序传递参数\n\\`\\`\\`\n<button onClick={(e) => this.deleteRow(id, e)}>Delete Row</button>\n\\`\\`\\`\n`","import React, { Component } from 'react';\nimport Editor from 'for-editor';\nimport val from './val.js';\nimport './style.scss'\nexport default class Firstindex extends Component{\n    constructor(props){\n        super(props)\n        this.props = props\n        this.state = {\n            num:1,\n            text:null,\n            flag:true\n          }\n        this.onclick =()=>{this.setState({num:this.state.num+1})}\n        this.handleClick=(e)=>{e.preventDefault();this.setState({text:'<a>无跳转'})}\n        this.handleClick2=()=>{this.setState({flag:!this.state.flag});}\n    }\n    render() {return(\n        <div className=\"listen\">\n        <Editor style={{width:'90%'}} className=\"listenmd\" preview=\"true\" height=\"75vh\" toolbar=\"\" lineNum=\"false\" value={val} onChange={() => this.handleChange()} />\n        <div className=\"addlisten\">\n         <button type=\"button\" className=\"listenclick\" onClick={this.onclick}>ClickChange</button>\n        <div className=\"size-5\">{this.state.num}</div>\n        <div className=\"guodu\"></div>   \n        <a href=\"https://github.com/Buzz888/buzz888.github.io\" className=\"color-myblack\" onClick={this.handleClick}>\n        Click me\n        </a>\n        <div className=\"weight-bolder\">{this.state.text}</div>\n        <div className=\"guodu\"></div>   \n        <div>\n           <div onClick={this.handleClick2} className={this.state.flag ? 'open btn' : 'close btn'}></div>\n\n        </div>\n        </div>\n        </div>\n        \n    )}\n}","import React,{Component} from 'react';\nimport Firstindex from './first/index'\nimport Listen from './middle/index'\nimport { NavLink as Link,Route,Switch,Redirect} from 'react-router-dom'\nexport default class Index extends Component{\n      render() {\n        return <div className=\"item-md \">\n            <div className=\"tab-title bg-myblack py-3 flex jc-sa\">\n                <Link to=\"/index/first\" activeClassName=\"titleselected\">[React原理]</Link>\n                <Link to=\"/index/listen\" activeClassName=\"titleselected\">[React事件]</Link>\n            </div>\n            <Switch>\n            <Route component={Firstindex} path=\"/index/first\"></Route>\n            <Route component={Listen} path=\"/index/listen\"></Route>\n            <Redirect to=\"/index/first\" from=\"/\"/>\n            </Switch>\n            </div>\n      }\n    }","import React,{Component} from 'react';\nimport Editor from 'for-editor';\nimport val from './val'\nexport default class Myrouter extends Component{\n    render(){\n        return (<div className=\"item-md\"><Editor preview=\"true\" height=\"85vh\" toolbar=\"\" lineNum=\"false\" value={val} onChange={() => this.handleChange()} /></div>)\n    }\n\n} ","export default `\n## React Router\nweb:  \nnpm install react-router-dom 安装路由模块  \n1.路由的挂载  \n\n\\`\\`\\`\nindex.js:引入路由模块选择路由模式\nBrowserRouter as Router&HashRouter as Router\n一个带#号一个不带 后者兼容性更好\nimport {HashRouter as Router ,Route} from 'react-router-dom'\nrender函数添加路由匹配\n<Router>\n<Route component={App}></Route>\n</Router>\n\n\\`\\`\\`\n2.开始使用路由\n\n\\`\\`\\`\nimport {Router,Route,Link} from 'react-router-dom'\nLink/NavLink用于路由跳转\n<Link to=\"./index\"></Link>\n<NavLink>可用为link添加样式如activeClassName=\"selected\"\nactiveStyle={{\n    fontWeight: \"bold\",\n    color: \"red\"\n  }}\n  \\`\\`\\`\n3.路由的渲染\n>exact 用于不完全匹配适用于页面动态路由渲染使用\n\n\\`\\`\\`\ncomponent/render渲染路由组件 render可以传值\n<Route render={(routerprops)=>{return <Index {...routerprops} x={1}></Index>}}></Route>\n\n<Router> \n<Route component={Index} path=\"/index/\"></Route>\n<Route render={()=><div></div>}></Route>\n</Router>\n动态传值:\nthis.props.match.params.id\n\\`\\`\\`\n>路由重定向\n>> \\`\\`\\`\n>>  <Switch><Redirect to=\"/index\" from=\"/\"/><Switch>\n>> 404\n>> <Switch>\n>> <Redirect to=\"/404\"/>\n>> <Redirect to=\"/index\" from=\"/\" exact/>\n>> <Switch>\n>> \\`\\`\\`\n\n#### 路由传值的三种方式  \n1. :id =>this.props.match.params.id  \n2. ?from=artical  \n3. {{pathname:'/index',state:{id:1}}}\n   \n#### 路由跳转的方式\nthis.props.history.push('/home') 支持上面路由传值\n\n>没有用router渲染的组件需要通过withRouter()包起来调用props的方法\n`","import React,{Component} from 'react'\nimport logo from '../../logo.svg';\nimport './style.scss'\nexport default class Nopath extends Component{\n    render(){\n        return(\n    <div className=\"w-100 h-100 titlepath bg-myblack flex jc-center\">\n        <img src={logo} className=\" App-logo \" alt=\"logo\" />\n        <h1 className=\"Nopath\">Is Nopath 404</h1>\n    </div>\n    \n        )\n    }\n}","export default `\n## 函数组件\n函数组件特点  \n1. 简单 渲染快速 组件一被调用 里面内容渲染完成，当前组件内部信息基本不改变\n>除非重新调用则会改变组件内容 \n\n2.没有state状态管控随时变化的内容 也没有生命周期\n\n### 使用\n\\`\\`\\`\nimport React from 'react' =>用经过react渲染必须引入\nexport default function component(props){\nreturn(<div>hello react</div>)\n}\n\\`\\`\\`\n### props传参方式\n>插槽:props.children[0] =>指定传某个索引值\n>调用React.Children.map(值,callback)\n>>React.Children.map(props.children,(item,index){return {item}})\n`","import React from 'react'\nimport val from './val'\nimport Editor from 'for-editor';\nexport default function Classcom(){\n    return(<div><Editor preview=\"true\" height=\"75vh\" toolbar=\"\" lineNum=\"false\" value={val} onChange={() => this.handleChange()} /></div>)\n}","export default `\n## 类组件\n>学习类组件需要了解类中的静态属性静态方法&实例属性和和实例方法\n\n\\`\\`\\`\nclass component(){\n    =>设置静态属性\n     static jack = 18\n    =>设置静态方法 \n     static say(){\n     console.log('hello react')\n     }\n    =>实例属性两种方式\n    jack1 = 18\n    constructor(){\n    this.jack2 = 18\n    } \n    =>实例方法\n    say1(){\n    console.log('hello react')\n    }\n}\n继承关键字 extends super()=>相当于call\n\\`\\`\\`\n### 创建类组件\n\\`\\`\\`\nimport React,{Component} from 'react'\nclass A extends Component {\n            constructor(props){\n      props =>依然是传递进来的属性\n      super(props)\n      }\n      render(){\n      return(<div>hello react</div>)\n      }\n}\n\\`\\`\\`\nstatic propTypes定义属性规则\nisRequired必须传递\nPropType.string/bool/number/func/object/symbol/node\nelement(JSX元素)/instanceOf必须某实例/oneOf([])其中一个\n### 状态管控\n\\`\\`\\`\n this.state = {\n      num:1\n    }\nthis.setState({\n      num:this.state.num+1\n    })\n\\`\\`\\`\n\n\n### 非受控组件\n\\`\\`\\`\n<P ref=\"timeBox\"><P>\nthis.refs.timeBox.innerHTML = 'hello vue'\n<P ref={x=>{this.timeBox = x}}></P>\n\n`","import React from 'react'\nimport val from './val'\nimport Editor from 'for-editor'\nexport default function Classcom(){\n    return(<div><Editor preview=\"true\" height=\"75vh\" toolbar=\"\" lineNum=\"false\" value={val} onChange={() => this.handleChange()} /></div>)\n}","export default `\n## Hook\n1. Hook可以让你在不编写 class 的情况下使用 state 以及其他的 React 特性。\n2. 为什么会有hook？  \n\n>在组件之间复用状态逻辑很难,复杂组件变得难以理解\n\n\n\\`\\`\\`\nimport React, { useState } from 'react';\n\nfunction Example() {\n  // 声明一个叫 “count” 的 state 变量。 0表示赋予的值\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n\\`\\`\\`\n>useState 就是一个 Hook,通过在函数组件里调用它来给组件添加一些内部 state。React 会在重复渲染时保留这个 state。useState 会返回一对值：当前状态和一个让你更新它的函数，你可以在事件处理函数中或其他一些地方调用这个函数。它类似 class 组件的 this.setState，但是它不会把新的 state 和旧的 state 进行合并。 \n## Effect Hook\nuseEffect 就是一个 Effect Hook，给函数组件增加了操作副作用的能力。它跟 class 组件中的 componentDidMount、componentDidUpdate 和 componentWillUnmount 具有相同的用途，只不过被合并成了一个 API。（我们会在使用 Effect Hook 里展示对比 useEffect 和这些方法的例子。）\n`","import React, { useState,useEffect} from 'react'\nimport val from './val'\nimport Editor from 'for-editor';\nimport './style.scss'\nexport default function Hookcom(){\n    const [count,setCount] = useState(0)\n    const [ary] = useState(['hello React','hello Vue','hello Angular'])\n    const [counts,setCounts] = useState(0)\n    // 相当于 componentDidMount 和 componentDidUpdate:\n  useEffect(() => {\n    // 使用浏览器的 API 更新页面标题\n    document.title = `${ary[counts]}`;\n  });\n    return(\n    <div >\n     <Editor preview=\"true\" height=\"75vh\" toolbar=\"\" lineNum=\"false\" value={val} onChange={() => this.handleChange()} />\n    <div className=\"hookstyle flex jc-center ai-center wrap\">\n    <div className=\"itemhook\"><h3>这是第一个hook</h3>\n    <p>You Click {count} times</p>\n    <button className=\"listenclick\" onClick={()=>setCount(count +1)}>\n        Click me\n    </button></div>\n    <div className=\"itemhook\">\n     <h3>useEffect点换标题</h3>\n     <p>You title {ary[counts]} </p>\n    <button className=\"listenclick\" onClick={()=>setCounts(counts<2?counts +1:0)}>\n        点击切换title\n    </button>\n    </div>\n    </div>\n    </div>)\n}","import React,{Component} from 'react';\nimport { NavLink as Link,Route,Switch,Redirect} from 'react-router-dom'\nimport Fnccom from './fnc-com/index'\nimport Classccom from './class-com/index'\nimport Hookcom from './hook-com/index'\nexport default class Index extends Component{\n      render() {\n        return <div className=\"item-md \">\n            <div className=\"tab-title bg-myblack py-3 flex jc-sa\">\n                <Link to=\"/components/index\" activeClassName=\"titleselected\">[函数组件]</Link>\n                <Link to=\"/components/class\" activeClassName=\"titleselected\">[Class组件]</Link>\n                <Link to=\"/components/hook\" activeClassName=\"titleselected\">[Hook组件]</Link>\n            </div>\n            <Switch>\n            <Route component={Fnccom} path=\"/components/index\"></Route>\n            <Route component={Classccom} path=\"/components/class\"></Route>\n            <Route component={Hookcom} path=\"/components/hook\"></Route>\n            <Redirect to=\"/components/index\" from=\"/components\" exact></Redirect>\n            <Redirect to=\"/404\"></Redirect>\n            </Switch>\n            \n            </div>\n      }\n    }","import React from 'react'\nimport Editor from 'for-editor';\nimport val from './val.js';\nexport default function(){\n    return(<div className=\"item-md\"><Editor preview=\"true\" height=\"75vh\" toolbar=\"\" lineNum=\"false\" value={val} onChange={() => this.handleChange()} /></div>)\n}","export default `\nhello react\n`","import React,{ useState }  from 'react'\nimport './style.scss'\nexport default function List(){\n    const [state, setState] = useState(['hello Vue','hello React','hello Bootstarp']);\n    const [val, setVal] = useState('');\n    let inp = '';\n    \n     return(\n     \n        <div className=\"itemelem\">\n         <div className=\"mt-5 flex ai-center jc-center\">\n         <input value={val} onChange={(e)=>{inp=e.target.value;return setVal(x=>inp)}} type=\"text\" className=\"addinp\"></input>\n         <button  onClick={() => setState(x => {let val1 = val;setVal(x=>'') ;return val1===''?[...x]:[...x,val1];})} className=\"listenclick ml-4\">添加到列表</button>\n         </div>\n         <ul className=\"listitem\">\n         <h3 className=\"color-myhui ml-2\">*列表点击单个可删除</h3>\n         {state.map((i,index)=>{return<li onClick={()=>setState(x=>{let ary = x; ary.splice(index,1) ;console.log(ary) ;return [...ary]})} key={index}>{i}</li>})}\n         </ul>\n        </div>\n   \n     )\n}","import React,{Component,createContext} from 'react'\n\nconst{\n    Provider,\n    Consumer:CounterConsumer //=>解构再赋值\n} = createContext()\n// =>context\nclass ConuterProvider extends Component{\n    constructor(){\n        super()\n        this.state = {\n            count:100\n        }\n    }\n    incrementCount =()=>{\n        this.setState({\n            count:this.state.count + 1\n        })\n    }\n    decrementCount =()=>{\n        this.setState({\n            count:this.state.count - 1\n        })\n    }\n    render(){\n       return( <Provider value={{\n           count:this.state.count,x:1,\n           onincrementCount:this.incrementCount,\n           ondecrementCount:this.decrementCount}}>\n        {this.props.children}\n        </Provider>)\n    }\n}\n\nclass Counter extends Component{\n     render(){\n         return(\n             <CounterConsumer>\n                 {\n                 (arg)=>{\n                     console.log(arg)\n                     return <span>{arg.count}</span>\n                 }}\n             </CounterConsumer>\n             \n         )\n     }\n }\n class CountBtn extends Component{\n     render(){\n         return(\n        <CounterConsumer>\n            {\n                ({onincrementCount,ondecrementCount})=>{\n                   const  handler = this.props.type ==='increment'?onincrementCount:ondecrementCount\n                    return(\n                    <button onClick={handler}>{this.props.children}</button>\n                    )\n                }\n            }\n        </CounterConsumer>\n         \n         )\n     }\n }\n// =>redux\nfunction Myredux(){\n    \n        return(\n            <div>\n            <button></button>\n            <span id=\"item\"></span>\n            <button></button>\n            </div> \n        )\n       \n    \n}\nexport default class Num extends Component{\n    render(){\n        return(\n        <div className=\"itemelem mt-5\">\n            <h1 className=\"size-5\">计数器的组件通信</h1>\n            <h3 className=\"color-myhui ml-2\">*Context Api</h3>\n            <ConuterProvider>\n            <CountBtn type=\"decrement\">-</CountBtn>\n            <Counter></Counter>\n            <CountBtn type=\"increment\">+</CountBtn>\n            </ConuterProvider>\n            <h3 className=\"color-myhui ml-2\">*Redux 使用</h3>\n            <Myredux></Myredux>\n        </div> \n        )\n        \n    }\n}","import React from 'react';\nimport List from './list'\nimport Num from './num'\nexport default function(){\n    return (\n    <div className=\"flex wrap\">\n        <h1 className=\"p-3\">这是React一些案例</h1>\n        <div className=\"guodu\"></div>\n        <List></List>\n        <Num></Num>\n    </div> \n    \n    \n    )\n}","import React,{Component} from 'react';\nimport Menu from './component/menu/menu' //菜单组件\n// import Lefttab from './component/left-tab/index'\n// import render from 'react-dom';\nimport {HashRouter as Router ,Route,Switch,Redirect} from 'react-router-dom'\nimport {Index,Myrouter,Nopath,Components,Life,Elem} from './views/index'\nexport default class App extends Component{\n    render(){\n        return(\n            <div>\n            <Menu></Menu>\n            <div style={{marginTop:'60px'}}>\n                \n                <Router>\n                <Switch>\n                <Route component={Index} path=\"/index\"></Route>\n                <Route component={Myrouter} path=\"/router\"></Route>\n                <Route component={Components} path=\"/components\"></Route>\n                <Route component={Life} path=\"/life\"></Route>\n                <Route component={Elem} path=\"/elem\"></Route>\n                <Route component={Nopath} path=\"/404\"></Route>\n                <Redirect to=\"/index\" from=\"/\" exact/>\n                <Redirect to=\"/404\" />\n                </Switch>\n                \n                </Router>\n            </div>\n            </div>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './index.scss'\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './iconfont/iconfont.css'\nimport {HashRouter as Router ,Route} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router>\n                       <Route component={App}></Route>\n               </Router>, \ndocument.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}